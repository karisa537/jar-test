# CI Pipeline to build the code and store the artifacts 
#To be consumed by the cd pipeline later when the code has been riviewed and confirmed stable.
variables:
 vmImage: 'ubuntu-latest'
 image_tag: $(Build.BuildNumber)
 projectName: 'Test Project'
trigger:
  - none
 
pool:
  vmImage: "ubuntu-latest"

stages:
- stage: Build_and_Publish
  displayName: Build and push image to registry than check for vulnerability scan results to determine publishing health
  jobs:
  - job: ArtifactDownload
    displayName: Download artifacts
    pool:
      vmImage: 'ubuntu-latest'
    steps:

    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: 'personal projects'
        definition: 36
        buildVersionToDownload: 'latest'
    
    - task: Docker@2
      displayName: Docker login
      inputs:
        command: login
        containerRegistry: 'dockerRegistry'
    - task: Docker@2
      inputs:
        command: build
        repository: jkalume/kari-git-images
        Dockerfile: 'Dockerfile'
        tags: $(image_tag)

    - task: Bash@3
      displayName: List existing images
      inputs:
        targetType: inline
        script: |
          docker image ls
    - task: Bash@3
      displayName: Pushing image $(image_tag) to registry
      inputs:
        targetType: inline
        script: |
          docker push jkalume/kari-git-images:$(image_tag)